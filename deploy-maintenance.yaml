apiVersion: v1
kind: Service
metadata:
  name: maintenance
  labels:
    app.kubernetes.io/name: maintenance
spec:
  type: NodePort
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app.kubernetes.io/name: maintenance
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maintenance
  labels:
    app.kubernetes.io/name: maintenance
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: maintenance
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: maintenance
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - maintenance
            topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
        - name: registry-secret
      containers:
      - name: maintenance
        image: registry.gitlab.com/aimhighergg/docker-registry/
        imagePullPolicy: Always
        resources:
          limits:
            memory: 256Mi
            cpu: "0.25"
          requests:
            memory: 256Mi
            cpu: "0.25"
        ports:
        - containerPort: 80
          name: maintenance